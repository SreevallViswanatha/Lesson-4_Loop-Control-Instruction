#include <stdio.h>
#include <stdlib.h>
#include <math.h>
//Wap to accept a number and display the sum of the first and last digit of that number

//Logic to swap first and last digit of a number
//Begin:
//    read(num)
//    lastDigit ← num % 10;
//    digits ← log10(num);
//    firstDigit ← num / pow(10, digits);
//
//    swappedNum ← lastDigit * pow(10, digits);
//    swappedNum ← swappedNum + num % pow(10, digits);
//    swappedNum ← swappedNum - lastDigit;
//    swappedNum ← swappedNum + firstDigit;
//End

//Let us do a dry run of the algorithm to get grip on the logic.
//
//Suppose num = 12345
//--------------------
//lastDigit  = 12345 % 10 => 5
//digits     = log10(12345) => 4
//firstDigit = 12345 / pow (10, 4) => 12345 / 10000 => 1
//
//swappedNum = 5 * pow(10, 4) => 5 * 10000 => 50000
//swappedNum = 50000 + (12345 % 10000) => 50000 + 2345 => 52345
//swappedNum = 52345 - 5 => 52340
//swappedNum = 52340 + 1 => 52341
int main()
{
  #include <stdio.h>
#include <stdlib.h>

int main()
{
    int count = 0;

    int num, orig_num, last_digit, power=1, swap_number, digits, first_digit, exponent;
    printf("Enter the number: ");
    scanf("%d", &num);
    orig_num = num;
    last_digit = num%10;
    digits = (int)log10(orig_num);
    exponent = digits;
    while(exponent!=0)
    {
        power = power * 10;
        --exponent;
    }
    printf("\npower number : %d", power);
    first_digit = orig_num/power;
    swap_number = last_digit * power;
    printf("\nThe swapnumber: %d", swap_number);
    swap_number = swap_number +(orig_num%power);
    swap_number = swap_number - last_digit;
    swap_number = swap_number + first_digit;
    printf("The swapped number is : %d", swap_number);
}


